From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ishland <ishlandmc@yeah.net>
Date: Sat, 21 Nov 2020 18:35:43 +0800
Subject: [PATCH] Hotpur Basis


diff --git a/build.gradle b/build.gradle
new file mode 100644
index 000000000..43d2b421b
--- /dev/null
+++ b/build.gradle
@@ -0,0 +1,83 @@
+import java.text.SimpleDateFormat
+
+/*
+ * This file was generated by the Gradle 'init' task.
+ */
+
+dependencies {
+    api project(':hotpur-api')
+    api project(":Paper-MojangAPI")
+    api 'io.netty:netty-all:4.1.50.Final'
+    api "io.papermc:minecraft-server:${project.minecraft_version}-SNAPSHOT"
+    api 'org.mozilla:rhino:1.7.7.1'
+    api 'cat.inspiracio:rhino-js-engine:1.7.7.1'
+    api 'net.minecrell:terminalconsoleappender:1.2.0'
+    api 'org.apache.logging.log4j:log4j-core:2.8.1'
+    api 'org.apache.logging.log4j:log4j-iostreams:2.8.1'
+    api 'org.ow2.asm:asm:8.0.1'
+    api 'co.aikar:cleaner:1.0-SNAPSHOT'
+    api 'com.googlecode.json-simple:json-simple:1.1.1'
+    api 'com.velocitypowered:velocity-native:1.1.0-SNAPSHOT'
+    runtimeOnly 'org.jline:jline-terminal-jansi:3.12.1'
+    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.1'
+    runtimeOnly 'com.lmax:disruptor:3.4.2'
+    runtimeOnly 'org.xerial:sqlite-jdbc:3.32.3'
+    runtimeOnly 'mysql:mysql-connector-java:5.1.49'
+    testImplementation 'org.hamcrest:hamcrest-library:1.3'
+    testImplementation 'io.github.classgraph:classgraph:4.8.47'
+}
+
+description = 'Hotpur-Server'
+
+jar {
+    manifest {
+        attributes(
+                'Main-Class': 'org.bukkit.craftbukkit.Main',
+                'Implementation-Title': 'CraftBukkit',
+                'Implementation-Version': rootProject.ext.implementationVersion,
+                'Implementation-Vendor': new Date(),
+                'Specification-Title': 'Bukkit',
+                'Specification-Version': project.api_version,
+                'Specification-Vendor': 'Bukkit Team'
+        )
+        attributes('Sealed': 'true', "net/bukkit/")
+        attributes('Sealed': 'true', "com/bukkit/")
+        attributes('Sealed': 'true', "org/bukkit/")
+    }
+}
+
+processResources {
+    doFirst {
+        Properties properties = new Properties();
+        properties.setProperty("ImplementationVersion", rootProject.ext.implementationVersion)
+        properties.setProperty("SpecificationVersion", project.project_version)
+        properties.setProperty("BuildTime", new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(new Date()))
+        FileOutputStream out
+        out = new FileOutputStream(getDestinationDir().toPath().resolve("version.properties").toFile())
+        properties.store(out, "Hotpur Version File")
+        out.close()
+
+    }
+}
+
+//noinspection UnnecessaryQualifiedReference
+shadowJar {
+    archiveFileName = "hotpur-${project.minecraft_version}.jar"
+    relocate 'jline', 'org.bukkit.craftbukkit.libs.jline'
+    relocate 'org.apache.commons.codec', 'org.bukkit.craftbukkit.libs.org.apache.commons.codec'
+    relocate 'org.apache.commons.io', 'org.bukkit.craftbukkit.libs.org.apache.commons.io'
+    relocate 'org.apache.commons.lang3', 'org.bukkit.craftbukkit.libs.org.apache.commons.lang3'
+    relocate 'org.objectweb.asm', 'org.bukkit.craftbukkit.libs.org.objectweb.asm'
+    relocate('org.bukkit.craftbukkit', "org.bukkit.craftbukkit.v${project.nms_revision}"){
+        exclude 'org.bukkit.craftbukkit.Main*'
+    }
+    relocate 'net.minecraft.server', "net.minecraft.server.v${project.nms_revision}"
+    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
+}
+
+assemble.dependsOn(shadowJar)
+
+test {
+    exclude "org/bukkit/craftbukkit/inventory/ItemStack*Test.class"
+}
+
diff --git a/pom.xml b/pom.xml
deleted file mode 100644
index 0c982c3f0..000000000
--- a/pom.xml
+++ /dev/null
@@ -1,443 +0,0 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <artifactId>purpur</artifactId>
-    <packaging>jar</packaging>
-    <version>1.16.4-R0.1-SNAPSHOT</version>
-    <name>Purpur-Server</name>
-    <url>https://github.com/pl3xgaming/Purpur</url>
-
-    <properties>
-        <!-- <skipTests>true</skipTests> Paper - This [was] not going to end well -->
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-        <api.version>unknown</api.version>
-        <minecraft.version>1.16.4</minecraft.version>
-        <minecraft_version>1_16_R3</minecraft_version>
-        <maven.compiler.source>1.8</maven.compiler.source>
-        <maven.compiler.target>1.8</maven.compiler.target>
-    </properties>
-
-    <parent>
-        <groupId>net.pl3x.purpur</groupId>
-        <artifactId>purpur-parent</artifactId>
-        <version>dev-SNAPSHOT</version>
-        <relativePath>../pom.xml</relativePath>
-    </parent>
-
-    <dependencies>
-        <dependency>
-            <groupId>net.pl3x.purpur</groupId>
-            <artifactId>purpur-api</artifactId>
-            <version>${project.version}</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>com.destroystokyo.paper</groupId>
-            <artifactId>paper-mojangapi</artifactId>
-            <version>${project.version}</version>
-            <scope>compile</scope>
-        </dependency>
-        <!-- Tuinity start - fix compile issue (cannot see new api) by moving netty include BEFORE server jar -->
-        <dependency>
-            <groupId>io.netty</groupId>
-            <artifactId>netty-all</artifactId>
-            <version>4.1.50.Final</version>
-        </dependency>
-        <!-- Tuinity end - fix compile issue (cannot see new api) by moving netty include BEFORE server jar -->
-        <dependency>
-            <groupId>io.papermc</groupId>
-            <artifactId>minecraft-server</artifactId>
-            <version>${minecraft.version}-SNAPSHOT</version>
-            <scope>compile</scope>
-        </dependency>
-        <!-- Purpur start -->
-        <dependency>
-            <groupId>org.mozilla</groupId>
-            <artifactId>rhino</artifactId>
-            <version>1.7.7.1</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>cat.inspiracio</groupId>
-            <artifactId>rhino-js-engine</artifactId>
-            <version>1.7.7.1</version>
-            <scope>compile</scope>
-        </dependency>
-        <!-- Purpur end -->
-        <dependency>
-            <groupId>net.minecrell</groupId>
-            <artifactId>terminalconsoleappender</artifactId>
-            <version>1.2.0</version>
-        </dependency>
-        <dependency>
-            <groupId>org.jline</groupId>
-            <artifactId>jline-terminal-jansi</artifactId>
-            <version>3.12.1</version>
-            <scope>runtime</scope>
-        </dependency>
-        <!--
-          Required to add the missing Log4j2Plugins.dat file from log4j-core
-          which has been removed by Mojang. Without it, log4j has to classload
-          all its classes to check if they are plugins.
-          Scanning takes about 1-2 seconds so adding this speeds up the server start.
-        -->
-        <dependency>
-            <groupId>org.apache.logging.log4j</groupId>
-            <artifactId>log4j-core</artifactId>
-            <version>2.8.1</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.logging.log4j</groupId>
-            <artifactId>log4j-slf4j-impl</artifactId>
-            <version>2.8.1</version>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.logging.log4j</groupId>
-            <artifactId>log4j-iostreams</artifactId>
-            <version>2.8.1</version>
-            <scope>compile</scope>
-        </dependency>
-        <!-- Paper - Async loggers -->
-        <dependency>
-            <groupId>com.lmax</groupId>
-            <artifactId>disruptor</artifactId>
-            <version>3.4.2</version>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.ow2.asm</groupId>
-            <artifactId>asm</artifactId>
-            <version>8.0.1</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <!-- wrapper to use either java 8 sun cleaner or java9+ official cleaner -->
-            <groupId>co.aikar</groupId>
-            <artifactId>cleaner</artifactId>
-            <version>1.0-SNAPSHOT</version>
-        </dependency>
-        <!-- Tuinity - fix compile issue (cannot see new api) by moving netty include BEFORE server jar -->
-        <!-- deprecated API depend -->
-        <dependency>
-            <groupId>com.googlecode.json-simple</groupId>
-            <artifactId>json-simple</artifactId>
-            <version>1.1.1</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.xerial</groupId>
-            <artifactId>sqlite-jdbc</artifactId>
-            <version>3.32.3</version>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>mysql</groupId>
-            <artifactId>mysql-connector-java</artifactId>
-            <version>5.1.49</version>
-            <scope>runtime</scope>
-        </dependency>
-        <!-- testing -->
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.13.1</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.hamcrest</groupId>
-            <artifactId>hamcrest-library</artifactId>
-            <version>1.3</version>
-            <scope>test</scope>
-        </dependency>
-        <!-- for vanilla goal scanning -->
-        <dependency>
-            <groupId>io.github.classgraph</groupId>
-            <artifactId>classgraph</artifactId>
-            <version>4.8.47</version>
-            <scope>test</scope>
-        </dependency>
-        <!-- for optimized protocol handling -->
-        <dependency>
-            <groupId>com.velocitypowered</groupId>
-            <artifactId>velocity-native</artifactId>
-            <version>1.1.0-SNAPSHOT</version>
-            <scope>compile</scope>
-        </dependency>
-    </dependencies>
-
-    <repositories>
-        <!--
-            If you are a plugin developer, please use https://hub.spigotmc.org/nexus/content/repositories/snapshots/
-            as your repository URL. This will ensure only Bukkit / Spigot-API are pulled from our Maven repository.
-
-            Please see https://www.spigotmc.org/go/maven for more information.
-        -->
-        <repository>
-            <id>spigotmc-public</id>
-            <url>https://hub.spigotmc.org/nexus/content/groups/public/</url>
-        </repository>
-    </repositories>
-
-    <pluginRepositories>
-        <pluginRepository>
-            <id>spigotmc-public</id>
-            <url>https://hub.spigotmc.org/nexus/content/groups/public/</url>
-        </pluginRepository>
-    </pluginRepositories>
-
-    <!-- This builds a completely 'ready to start' jar with all dependencies inside -->
-    <build>
-        <finalName>purpur-${minecraft.version}</finalName>
-        <defaultGoal>clean install</defaultGoal> <!-- Paper -->
-        <plugins>
-            <plugin>
-                <groupId>com.lukegb.mojo</groupId>
-                <artifactId>gitdescribe-maven-plugin</artifactId>
-                <version>1.3</version>
-                <configuration>
-                    <outputPrefix>git-Purpur-</outputPrefix> <!-- Tuinity -->
-                    <scmDirectory>..</scmDirectory>
-                </configuration>
-                <executions>
-                    <execution>
-                        <phase>compile</phase>
-                        <goals>
-                            <goal>gitdescribe</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-jar-plugin</artifactId>
-                <version>3.2.0</version>
-                <configuration>
-                    <forceCreation>true</forceCreation> <!-- Required to prevent shading the jar multiple times -->
-                    <archive>
-                        <manifest>
-                            <addDefaultEntries>false</addDefaultEntries>
-                        </manifest>
-                        <manifestEntries>
-                            <Main-Class>org.bukkit.craftbukkit.Main</Main-Class>
-                            <Implementation-Title>CraftBukkit</Implementation-Title>
-                            <!--suppress MavenModelInspection -->
-                            <Implementation-Version>${describe}</Implementation-Version>
-                            <Implementation-Vendor>${maven.build.timestamp}</Implementation-Vendor>
-                            <Specification-Title>Bukkit</Specification-Title>
-                            <Specification-Version>${api.version}</Specification-Version>
-                            <Specification-Vendor>Bukkit Team</Specification-Vendor>
-                        </manifestEntries>
-                        <manifestSections>
-                            <manifestSection>
-                                <name>net/bukkit/</name>
-                                <manifestEntries>
-                                    <Sealed>true</Sealed>
-                                </manifestEntries>
-                            </manifestSection>
-                            <manifestSection>
-                                <name>com/bukkit/</name>
-                                <manifestEntries>
-                                    <Sealed>true</Sealed>
-                                </manifestEntries>
-                            </manifestSection>
-                            <manifestSection>
-                                <name>org/bukkit/</name>
-                                <manifestEntries>
-                                    <Sealed>true</Sealed>
-                                </manifestEntries>
-                            </manifestSection>
-                        </manifestSections>
-                    </archive>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-shade-plugin</artifactId>
-                <version>3.2.3</version>
-                <executions>
-                    <execution>
-                        <phase>package</phase>
-                        <goals>
-                            <goal>shade</goal>
-                        </goals>
-                        <configuration>
-                            <dependencyReducedPomLocation>${project.build.directory}/dependency-reduced-pom.xml</dependencyReducedPomLocation> <!-- Paper -->
-                            <createSourcesJar>${shadeSourcesJar}</createSourcesJar>
-                            <filters>
-                                <filter>
-                                    <artifact>org.spigotmc:minecraft-server</artifact>
-                                    <excludes>
-                                        <exclude>com/google/common/**</exclude>
-                                        <exclude>com/google/gson/**</exclude>
-                                        <exclude>com/google/thirdparty/**</exclude>
-                                        <!-- paper -->
-                                        <exclude>io/netty/**</exclude>
-                                        <exclude>META-INF/native/libnetty*</exclude>
-                                        <exclude>com/brigadier/**</exclude>
-                                        <exclude>META-INF/MANIFEST.MF</exclude>
-                                        <exclude>com.mojang.authlib.yggdrasil.YggdrasilGameProfileRepository</exclude>
-                                        <exclude>com.mojang.datafixers.util.Either</exclude>
-                                        <exclude>org.apache.logging.log4j/**</exclude>
-                                    </excludes>
-                                </filter>
-                            </filters>
-                            <relocations>
-                                <!-- Cannot be relocated as it breaks translation property keys -->
-                                <!--
-                                <relocation>
-                                    <pattern>joptsimple</pattern>
-                                    <shadedPattern>org.bukkit.craftbukkit.libs.joptsimple</shadedPattern>
-                                </relocation>
-                                -->
-                                <relocation>
-                                    <pattern>jline</pattern>
-                                    <shadedPattern>org.bukkit.craftbukkit.libs.jline</shadedPattern>
-                                </relocation>
-                                <!-- Paper - Don't relocate fastutil in order to prevent api breakage -->
-                                <!--<relocation>-->
-                                    <!--<pattern>it.unimi</pattern>-->
-                                    <!--<shadedPattern>org.bukkit.craftbukkit.libs.it.unimi</shadedPattern>-->
-                                <!--</relocation>-->
-                                <relocation>
-                                    <pattern>org.apache.commons.codec</pattern>
-                                    <shadedPattern>org.bukkit.craftbukkit.libs.org.apache.commons.codec</shadedPattern>
-                                </relocation>
-                                <relocation>
-                                    <pattern>org.apache.commons.io</pattern>
-                                    <shadedPattern>org.bukkit.craftbukkit.libs.org.apache.commons.io</shadedPattern>
-                                </relocation>
-                                <relocation>
-                                    <pattern>org.apache.commons.lang3</pattern>
-                                    <shadedPattern>org.bukkit.craftbukkit.libs.org.apache.commons.lang3</shadedPattern>
-                                </relocation>
-                                <relocation>
-                                    <pattern>org.objectweb.asm</pattern>
-                                    <shadedPattern>org.bukkit.craftbukkit.libs.org.objectweb.asm</shadedPattern>
-                                </relocation>
-                                <relocation>
-                                    <pattern>org.bukkit.craftbukkit</pattern>
-                                    <shadedPattern>org.bukkit.craftbukkit.v${minecraft_version}</shadedPattern>
-                                    <excludes>
-                                        <exclude>org.bukkit.craftbukkit.Main*</exclude>
-                                    </excludes>
-                                </relocation>
-                                <relocation>
-                                    <pattern>net.minecraft.server</pattern>
-                                    <shadedPattern>net.minecraft.server.v${minecraft_version}</shadedPattern>
-                                </relocation>
-                            </relocations>
-                            <transformers>
-                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
-                                    <resource>META-INF/services/java.sql.Driver</resource>
-                                </transformer>
-                                <transformer implementation="com.github.edwgiz.maven_shade_plugin.log4j2_cache_transformer.PluginsCacheFileTransformer" />
-                            </transformers>
-                        </configuration>
-                    </execution>
-                </executions>
-                <dependencies>
-                    <dependency>
-                        <groupId>com.github.edwgiz</groupId>
-                        <artifactId>maven-shade-plugin.log4j2-cachefile-transformer</artifactId>
-                        <version>2.13.1</version>
-                    </dependency>
-                </dependencies>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>3.8.1</version>
-                <dependencies>
-                    <!-- we need our custom version as it fixes some bugs on case sensitive file systems -->
-                    <dependency>
-                        <groupId>org.codehaus.plexus</groupId>
-                        <artifactId>plexus-compiler-eclipse</artifactId>
-                        <version>2.8.5-spigotmc</version>
-                    </dependency>
-                    <dependency>
-                        <groupId>org.eclipse.jdt</groupId>
-                        <artifactId>ecj</artifactId>
-                        <version>3.22.0</version>
-                    </dependency>
-                </dependencies>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <version>2.12.4</version>
-                <configuration>
-                    <workingDirectory>${basedir}/target/test-server</workingDirectory>
-                    <excludes>
-                        <exclude>org/bukkit/craftbukkit/inventory/ItemStack*Test.java</exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-    <profiles>
-        <profile>
-            <id>shadeSourcesJar</id>
-            <properties>
-                <shadeSourcesJar>true</shadeSourcesJar>
-                <shadeSourcesContent>true</shadeSourcesContent>
-            </properties>
-        </profile>
-        <profile>
-            <id>development</id>
-            <properties>
-                <skipTests>false</skipTests>
-            </properties>
-            <build>
-                <plugins>
-                    <plugin>
-                        <groupId>org.apache.maven.plugins</groupId>
-                        <artifactId>maven-checkstyle-plugin</artifactId>
-                        <version>3.1.1</version>
-                        <executions>
-                            <execution>
-                                <phase>process-classes</phase>
-                                <goals>
-                                    <goal>check</goal>
-                                </goals>
-                            </execution>
-                        </executions>
-                        <configuration>
-                            <configLocation>checkstyle.xml</configLocation>
-                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
-                        </configuration>
-                        <dependencies>
-                            <dependency>
-                                <groupId>com.puppycrawl.tools</groupId>
-                                <artifactId>checkstyle</artifactId>
-                                <version>8.36.2</version>
-                            </dependency>
-                        </dependencies>
-                    </plugin>
-                    <plugin>
-                        <groupId>org.codehaus.mojo</groupId>
-                        <artifactId>animal-sniffer-maven-plugin</artifactId>
-                        <version>1.19</version>
-                        <executions>
-                            <execution>
-                                <phase>process-classes</phase>
-                                <goals>
-                                    <goal>check</goal>
-                                </goals>
-                            </execution>
-                        </executions>
-                        <configuration>
-                            <signature>
-                                <groupId>org.codehaus.mojo.signature</groupId>
-                                <artifactId>java18</artifactId>
-                                <version>1.0</version>
-                            </signature>
-                        </configuration>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
-    </profiles>
-</project>
diff --git a/src/main/java/com/destroystokyo/paper/Metrics.java b/src/main/java/com/destroystokyo/paper/Metrics.java
index 3b9b44851..829193bbd 100644
--- a/src/main/java/com/destroystokyo/paper/Metrics.java
+++ b/src/main/java/com/destroystokyo/paper/Metrics.java
@@ -1,5 +1,6 @@
 package com.destroystokyo.paper;
 
+import com.ishland.hotpur.server.HotpurVersioning;
 import net.minecraft.server.MinecraftServer;
 import org.bukkit.Bukkit;
 import org.bukkit.configuration.file.YamlConfiguration;
@@ -595,7 +596,7 @@ public class Metrics {
 
                 metrics.addCustomChart(new Metrics.SingleLineChart("players", () -> Bukkit.getOnlinePlayers().size()));
                 metrics.addCustomChart(new Metrics.SimplePie("online_mode", () -> Bukkit.getOnlineMode() ? "online" : (PaperConfig.isProxyOnlineMode() ? "bungee" : "offline"))); // Purpur
-                metrics.addCustomChart(new Metrics.SimplePie("purpur_version", () -> (Metrics.class.getPackage().getImplementationVersion() != null) ? Metrics.class.getPackage().getImplementationVersion() : "unknown")); // Purpur
+                metrics.addCustomChart(new Metrics.SimplePie("purpur_version", () -> HotpurVersioning.implementationVersion)); // Purpur
 
                 metrics.addCustomChart(new Metrics.DrilldownPie("java_version", () -> {
                     Map<String, Map<String, Integer>> map = new HashMap<>();
diff --git a/src/main/java/com/destroystokyo/paper/console/PaperConsole.java b/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
index c1280478e..fa77c9659 100644
--- a/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
+++ b/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
@@ -17,7 +17,7 @@ public final class PaperConsole extends SimpleTerminalConsole {
     @Override
     protected LineReader buildReader(LineReaderBuilder builder) {
         return super.buildReader(builder
-                .appName("Purpur") // Purpur
+                .appName("Hotpur") // Purpur // Hotpur
                 .variable(LineReader.HISTORY_FILE, java.nio.file.Paths.get(".console_history"))
                 .completer(new ConsoleCommandCompleter(this.server))
         );
diff --git a/src/main/java/com/ishland/hotpur/server/HotpurVersionFetcher.java b/src/main/java/com/ishland/hotpur/server/HotpurVersionFetcher.java
new file mode 100644
index 000000000..61692192e
--- /dev/null
+++ b/src/main/java/com/ishland/hotpur/server/HotpurVersionFetcher.java
@@ -0,0 +1,93 @@
+package com.ishland.hotpur.server;
+
+import com.destroystokyo.paper.VersionHistoryManager;
+import com.destroystokyo.paper.util.VersionFetcher;
+import com.google.common.base.Charsets;
+import com.google.gson.Gson;
+import com.google.gson.JsonObject;
+import com.google.gson.JsonSyntaxException;
+
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.HttpURLConnection;
+import java.net.URL;
+
+public class HotpurVersionFetcher implements VersionFetcher {
+
+    @Override
+    public long getCacheTime() {
+        return 3600000;
+    }
+
+    @Nonnull
+    @Override
+    public String getVersionMessage(@Nonnull String serverVersion) {
+        String[] parts = serverVersion.substring("git-Hotpur-".length()).split("[_\\s]");
+        String updateMessage = getUpdateStatusMessage("ishlandbukkit/Hotpur", parts[0], parts[2]);
+        String history = getHistory();
+        return history != null ? history + "\n" + updateMessage : updateMessage;
+    }
+
+    private String getUpdateStatusMessage(String repo, String branch, String versionInfo) {
+        int distance = fetchDistanceFromGitHub(repo, branch, versionInfo);
+
+        switch (distance) {
+            case -1:
+                return "Error obtaining version information";
+            case 0:
+                return "You are running the latest version";
+            case -2:
+                return "\u00AF\\_(\u30C4)_/\u00AF";
+            default:
+                return "You are " + distance + " version(s) behind";
+        }
+    }
+
+    // Contributed by Techcable <Techcable@outlook.com> in GH-65
+    // from PaperVersionFetcher
+    private static int fetchDistanceFromGitHub(@Nonnull String repo, @Nonnull String branch, @Nonnull String hash) {
+        try {
+            HttpURLConnection connection = (HttpURLConnection) new URL("https://api.github.com/repos/" + repo + "/compare/" + branch + "..." + hash).openConnection();
+            connection.connect();
+            if (connection.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND) return -2; // Unknown commit
+            try (BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream(), Charsets.UTF_8))) {
+                JsonObject obj = new Gson().fromJson(reader, JsonObject.class);
+                String status = obj.get("status").getAsString();
+                switch (status) {
+                    case "identical":
+                        return 0;
+                    case "behind":
+                        return obj.get("behind_by").getAsInt();
+                    default:
+                        return -1;
+                }
+            } catch (JsonSyntaxException | NumberFormatException e) {
+                e.printStackTrace();
+                return -1;
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+            return -1;
+        }
+    }
+
+    // from PaperVersionFetcher
+    @Nullable
+    private String getHistory() {
+        final VersionHistoryManager.VersionData data = VersionHistoryManager.INSTANCE.getVersionData();
+        if (data == null) {
+            return null;
+        }
+
+        final String oldVersion = data.getOldVersion();
+        if (oldVersion == null) {
+            return null;
+        }
+
+        return "Previous version: " + oldVersion;
+    }
+
+}
\ No newline at end of file
diff --git a/src/main/java/com/ishland/hotpur/server/HotpurVersioning.java b/src/main/java/com/ishland/hotpur/server/HotpurVersioning.java
new file mode 100644
index 000000000..d23e23635
--- /dev/null
+++ b/src/main/java/com/ishland/hotpur/server/HotpurVersioning.java
@@ -0,0 +1,38 @@
+package com.ishland.hotpur.server;
+
+import com.google.common.base.Preconditions;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Properties;
+
+public class HotpurVersioning {
+
+    public static final String implementationVersion;
+    public static final String specificationVersion;
+    public static final Date buildTime;
+
+    static {
+        Properties properties = new Properties();
+        try (final InputStream in = HotpurVersioning.class.getClassLoader().getResourceAsStream("version.properties")) {
+            properties.load(in);
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+        implementationVersion = properties.getProperty("ImplementationVersion");
+        specificationVersion = properties.getProperty("SpecificationVersion");
+        try {
+            buildTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").parse(properties.getProperty("BuildTime"));
+        } catch (ParseException e) {
+            throw new RuntimeException(e);
+        }
+        Preconditions.checkNotNull(implementationVersion);
+        Preconditions.checkNotNull(specificationVersion);
+        Preconditions.checkNotNull(buildTime);
+    }
+
+}
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index 179143400..ab8710847 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -180,7 +180,7 @@ public class PurpurConfig {
         if (!TimingsManager.hiddenConfigs.contains("settings.seed.end-spike")) TimingsManager.hiddenConfigs.add("settings.seed.end-spike");
     }
 
-    public static String serverModName = "Purpur";
+    public static String serverModName = "Hotpur"; // Hotpur
     private static void serverModName() {
         serverModName = getString("settings.server-mod-name", serverModName);
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 3dec164f6..9ffcff8ef 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -8,6 +8,7 @@ import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Iterators;
 import com.google.common.collect.Lists;
 import com.google.common.collect.MapMaker;
+import com.ishland.hotpur.server.HotpurVersioning;
 import com.mojang.authlib.GameProfile;
 import com.mojang.brigadier.StringReader;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
@@ -232,7 +233,7 @@ import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
 
 public final class CraftServer implements Server {
-    private final String serverName = "Purpur"; // Paper // Tuinity // Purpur
+    private final String serverName = "Hotpur"; // Paper // Tuinity // Purpur // Hotpur
     private final String serverVersion;
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
@@ -284,7 +285,7 @@ public final class CraftServer implements Server {
                 return player.getBukkitEntity();
             }
         }));
-        this.serverVersion = CraftServer.class.getPackage().getImplementationVersion();
+        this.serverVersion = HotpurVersioning.implementationVersion;
 
         Bukkit.setServer(this);
 
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index a5394b04a..f058ac5c1 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -10,6 +10,8 @@ import java.util.List;
 import java.util.concurrent.TimeUnit;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+
+import com.ishland.hotpur.server.HotpurVersioning;
 import joptsimple.OptionParser;
 import joptsimple.OptionSet;
 import net.minecrell.terminalconsole.TerminalConsoleAppender; // Paper
@@ -210,7 +212,7 @@ public class Main {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
         } else if (options.has("v")) {
-            System.out.println(CraftServer.class.getPackage().getImplementationVersion());
+            System.out.println(HotpurVersioning.implementationVersion);
         } else {
             // Do you love Java using + and ! as string based identifiers? I sure do!
             String path = new File(".").getAbsolutePath();
@@ -259,12 +261,10 @@ public class Main {
                     System.setProperty(TerminalConsoleAppender.JLINE_OVERRIDE_PROPERTY, "false"); // Paper
                 }
 
-                if (false) { // Main.class.getPackage().getImplementationVendor() != null && System.getProperty("IReallyKnowWhatIAmDoingISwear") == null) { // Purpur
-                    Date buildDate = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").parse(Main.class.getPackage().getImplementationVendor()); // Paper
-
+                if (System.getProperty("IReallyKnowWhatIAmDoingISwear") == null) { // Purpur // Hotpur
                     Calendar deadline = Calendar.getInstance();
-                    deadline.add(Calendar.DAY_OF_YEAR, -28);
-                    if (buildDate.before(deadline.getTime())) {
+                    deadline.add(Calendar.DAY_OF_YEAR, -1);
+                    if (HotpurVersioning.buildTime.before(deadline.getTime())) {
                         // Paper start - This is some stupid bullshit
                         System.err.println("*** Warning, you've not updated in a while! ***");
                         System.err.println("*** Please download a new build ***"); // Paper // Tuinity
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index 65a85f226..3ee4e52f5 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -353,7 +353,7 @@ public final class CraftMagicNumbers implements UnsafeValues {
 
     @Override
     public com.destroystokyo.paper.util.VersionFetcher getVersionFetcher() {
-        return new net.pl3x.purpur.PurpurVersionFetcher();
+        return new com.ishland.hotpur.server.HotpurVersionFetcher();
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index 13b984393..f17006ac9 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -2,15 +2,21 @@ package org.bukkit.craftbukkit.util;
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.nio.charset.StandardCharsets;
 import java.util.Properties;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+
+import com.ishland.hotpur.server.HotpurVersioning;
+import org.apache.commons.io.IOUtils;
 import org.bukkit.Bukkit;
 
 public final class Versioning {
     public static String getBukkitVersion() {
-        String result = "Unknown-Version";
+        String result = HotpurVersioning.specificationVersion;
 
+        // Hotpur - replace impl
+        /*
         InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/net.pl3x.purpur/purpur-api/pom.properties"); // Tuinity // Purpur
         Properties properties = new Properties();
 
@@ -23,7 +29,9 @@ public final class Versioning {
                 Logger.getLogger(Versioning.class.getName()).log(Level.SEVERE, "Could not get Bukkit version!", ex);
             }
         }
+        */
 
         return result;
+        // Hotpur end
     }
 }
diff --git a/src/main/resources/log4j2.xml b/src/main/resources/log4j2.xml
index 8af159abd..cc9da9e38 100644
--- a/src/main/resources/log4j2.xml
+++ b/src/main/resources/log4j2.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<Configuration status="WARN" packages="com.mojang.util" shutdownHook="disable">
+<Configuration status="FATAL" packages="com.mojang.util" shutdownHook="disable">
     <Appenders>
         <Queue name="ServerGuiConsole">
             <PatternLayout pattern="[%d{HH:mm:ss} %level]: %msg%n" />
diff --git a/src/test/java/org/bukkit/support/DummyServer.java b/src/test/java/org/bukkit/support/DummyServer.java
index 886e462de..04c8d985f 100644
--- a/src/test/java/org/bukkit/support/DummyServer.java
+++ b/src/test/java/org/bukkit/support/DummyServer.java
@@ -5,6 +5,8 @@ import java.lang.reflect.Method;
 import java.lang.reflect.Proxy;
 import java.util.HashMap;
 import java.util.logging.Logger;
+
+import com.ishland.hotpur.server.HotpurVersioning;
 import org.bukkit.Bukkit;
 import org.bukkit.Material;
 import org.bukkit.NamespacedKey;
@@ -46,7 +48,7 @@ public final class DummyServer implements InvocationHandler {
                     new MethodHandler() {
                         @Override
                         public Object handle(DummyServer server, Object[] args) {
-                            return DummyServer.class.getPackage().getImplementationVersion();
+                            return HotpurVersioning.implementationVersion;
                         }
                     }
                 );
